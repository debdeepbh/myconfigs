snippet np "import numpy" b
import numpy as np
$0
endsnippet

snippet plt "import plt" b
import matplotlib.pyplot as plt
$0
endsnippet

snippet torch "import torch" b
import torch
from torch import nn
$0
endsnippet


snippet plta "plt formalities" w
#plt.title('title')
#plt.xlabel('xlabel')
#plt.ylabel(ylabel')
#plt.xlim(float(xx[0]), float(xx[1]))
#plt.ylim(float(xx[0]), float(xx[1]))
#plt.axis('scaled')
#plt.grid()
#filename = args.path + '/filename.png'
#plt.savefig(filename, dpi=300, bbox_inches='tight')
plt.show()
plt.close()
$0
endsnippet

snippet mpi "plt formalities" w
from mpi4py import MPI
comm = MPI.COMM_WORLD
size = comm.Get_size()
rank = comm.Get_rank()
print('rank', rank, flush=True)
$0
endsnippet

snippet sns "plt formalities" w
import seaborn as sns
sns.set()
$0
endsnippet

snippet arg "argparse"
import argparse
import sys
# Instantiate the parser
parser = argparse.ArgumentParser(description='Optional app description')
parser.add_argument('--path', type=str, help='path to store output files', default='{$1:./out}')
parser.add_argument('--noplot', action='store_true', help='do not plot')
args = parser.parse_args()
# save args
filename = args.path + '/args'
with open(filename, 'w') as file:
    file.write('sys.args:' + str(sys.argv) + '\n')
    file.write('args:' + str(args))
$0
endsnippet
